/**
 * @file [@ELEMENT_FILE@]
 *
 * [@ELEMENT_DESC@]
 *
 * @author [@ELEMENT_AUTHOR@] - [@ELEMENT_EMAIL@]
 * @date [@ELEMENT_DATE@]
 * @verbatim
 * -------------------------
 * @endverbatim
*/

#pragma once

/*---< Type >-----------------------------------------------------------------*/

typedef struct s_[@ELEMENT_NAME@] [@ELEMENT_NAME@];

/*---< Includes >-------------------------------------------------------------*/

#include "BASE/base_FactoryInitStreamObject.h"
#include "BASE/base_ObjectDescription.h"
#include "BASE/base_ServerApplication.h"
#include "INTERFACE/int_ErrorCommandHandler.h"
#include "INTERFACE/int_HandlerTrackerId.h"
#include "INTERFACE/int_StreamObjectAllocator.h"

/*---< Variables >------------------------------------------------------------*/

/* The default factory definition */
extern base_FactoryInitStreamObject* default_[@ELEMENT_NAME@];
extern base_FactoryInitStreamObject* noIdefault_[@ELEMENT_NAME@];

/*---< Functions >------------------------------------------------------------*/

/**
 * Constructeur. Initialise les attributs de la structure par défaut.
 *
 * @param description - base_ObjectDescription* : The description of the object that will invoque this factory
 * @param application - base_ServerApplication* : The application that will run the command
 * @param errorHandler - int_ErrorCommandHandler* : The error handler for the current command
 * @param handlerTrackerId - int_HandlerTrackerId* : The handler used to compute the identifier
 *
 * @return Structure initialisée.
*/
[@ELEMENT_NAME@]* init_[@ELEMENT_NAME@]( base_ObjectDescription*  description,
[@ELEMENT_BLANK@]       [@ELEMENT_BLANK@]  base_ServerApplication*  application,
[@ELEMENT_BLANK@]       [@ELEMENT_BLANK@]  int_ErrorCommandHandler* errorHandler,
[@ELEMENT_BLANK@]       [@ELEMENT_BLANK@]  int_HandlerTrackerId*    handlerTrackerId );
/**
 * Constructeur. Initialise les attributs de la structure.
 *
 * @param current - [@ELEMENT_NAME@]* : Structure à initialiser.
 * @param description - base_ObjectDescription* : The description of the object that will invoque this factory
 * @param application - base_ServerApplication* : The application that will run the command
 * @param errorHandler - int_ErrorCommandHandler* : The error handler for the current command
 * @param handlerTrackerId - int_HandlerTrackerId* : The handler used to compute the identifier
 *
 * @return Structure initialisée.
*/
[@ELEMENT_NAME@]* build_[@ELEMENT_NAME@]( [@ELEMENT_NAME@]* current,
[@ELEMENT_BLANK@]        [@ELEMENT_BLANK@]  base_ObjectDescription*  description,
[@ELEMENT_BLANK@]        [@ELEMENT_BLANK@]  base_ServerApplication*  application,
[@ELEMENT_BLANK@]        [@ELEMENT_BLANK@]  int_ErrorCommandHandler* errorHandler,
[@ELEMENT_BLANK@]        [@ELEMENT_BLANK@]  int_HandlerTrackerId*    handlerTrackerId );
/**
 * Destructeur.
 *
 * @param current - [@ELEMENT_NAME@]* : Structure à détruire.
*/
void delete_[@ELEMENT_NAME@]( [@ELEMENT_NAME@]* current );

/**
 * Initialize the command
 *
 * @param factory - base_FactoryInitStreamObject* : The factory used for the initialisation
 * @param buffer - char* : The buffer where the object had to be initialized
 * @param allocator - int_StreamObjectAllocator* : The allocator for the object
*/
void initCommand_[@ELEMENT_NAME@]( base_FactoryInitStreamObject* factory,
                 [@ELEMENT_BLANK@]  char*                         buffer,
                 [@ELEMENT_BLANK@]  int_StreamObjectAllocator*    allocator );
/**
 * Uninitialize the command
 *
 * @param factory - base_FactoryInitStreamObject* : The factory used for the initialisation
 * @param buffer - char* : The buffer where the object had to be initialized
 * @param allocator - int_StreamObjectAllocator* : The allocator for the object
*/
void uninitCommand_[@ELEMENT_NAME@]( base_FactoryInitStreamObject* factory,
                   [@ELEMENT_BLANK@]  char*                         buffer,
                   [@ELEMENT_BLANK@]  int_StreamObjectAllocator*    allocator );

/*---< End of file >----------------------------------------------------------*/

