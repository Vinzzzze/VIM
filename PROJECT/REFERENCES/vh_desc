/**
 * @file [@ELEMENT_FILE@]
 *
 * [@ELEMENT_DESC@]
 *
 * @author [@ELEMENT_AUTHOR@] - [@ELEMENT_EMAIL@]
 * @date [@ELEMENT_DATE@]
 * @verbatim
 * -------------------------
 * @endverbatim
*/

#pragma once

/*---< Type >-----------------------------------------------------------------*/

typedef struct s_[@ELEMENT_NAME@] [@ELEMENT_NAME@];

/*---< Includes >-------------------------------------------------------------*/

#include "BASE/base_FactoryInitStreamObject.h"
#include "BASE/base_ObjectDescription.h"
#include "DATA/data_ObjectVectorDescription.h"

/*---< Macros >---------------------------------------------------------------*/

#define [@ELEMENT_MACRO@]_DEFAULT   default_[@ELEMENT_NAME@]

/*---< Variables >------------------------------------------------------------*/

/**
 * The global variable 
*/
extern base_ObjectDescription* [@ELEMENT_MACRO@]_DEFAULT;

/*---< Functions >------------------------------------------------------------*/

/**
 * Constructeur. Initialise les attributs de la structure.
 *
 * @param initFactory - base_FactoryInitStreamObject* : The factory used to initialize the built object
 *
 * @return Structure initialisée.
*/
base_ObjectDescription* init_[@ELEMENT_NAME@]( base_FactoryInitStreamObject* initFactory );

/**
 * Constructeur. Initialise les attributs de la structure.
 *
 * @param buffer - [@ELEMENT_NAME@]* : The buffer where the object definition can be created.
 * @param initFactory - base_FactoryInitStreamObject* : The factory used to initialize the built object
 *
 * @return Structure initialisée.
*/
[@ELEMENT_NAME@]* build_[@ELEMENT_NAME@]( [@ELEMENT_NAME@]* buffer,
[@ELEMENT_BLANK@]       [@ELEMENT_BLANK@]   base_FactoryInitStreamObject* initFactory );
/**
 * Destructeur.
 *
 * @param current - [@ELEMENT_NAME@]* : Structure à détruire.
*/
void delete_[@ELEMENT_NAME@]( [@ELEMENT_NAME@]* current );

/*---< End of file >----------------------------------------------------------*/

