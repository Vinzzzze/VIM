/**
 * @file [@ELEMENT_FILE@]
 *
 * [@ELEMENT_DESC@]
 *
 * @author [@ELEMENT_AUTHOR@] - [@ELEMENT_EMAIL@]
 * @date [@ELEMENT_DATE@]
 * @verbatim
 * -------------------------
 * @endverbatim
*/

#pragma once

/*---< Type >-----------------------------------------------------------------*/

typedef struct s_[@ELEMENT_NAME@] [@ELEMENT_NAME@];

/**
 * List the indexes for the current description
*/
typedef enum
{
[@ELEMENT_INDEX_LIST@]   [@ELEMENT_MACRO@]_INDEX_LAST
} index_[@ELEMENT_NAME@];

#ifdef BASE_COMMANDREMOTE_USE_EXPORT
typedef enum
{
[@DECLARATION_ENUM_LIST@]   [@ELEMENT_MACRO@]_PARAM_LAST
} params_[@ELEMENT_NAME@];
#endif

/*---< Includes >-------------------------------------------------------------*/

#include "DATA/data_ObjectDescription.h"

/*---< Variables >------------------------------------------------------------*/

#ifndef BASE_COMMANDREMOTE_USE_EXPORT
/**
 * The global variable 
*/
extern base_ObjectDescription* [@ELEMENT_MACRO@]_DEFAULT;
extern [@DESCRIPTION_DECLARE@][@ELEMENT_NAME@] [@DESCRIPTION_VARIABLE@];
#else
extern [@DESCRIPTION_DECLARE@][@ELEMENT_NAME@] [@DESCRIPTION_VARIABLE@]_export;
#endif

/*---< Functions >------------------------------------------------------------*/

#ifndef BASE_COMMANDREMOTE_USE_EXPORT
/**
 * Constructeur. Initialise les attributs de la structure.
 *
 * @param buffer - [@ELEMENT_NAME@]* : The buffer where the object definition can be created.
 *
 * @return Structure initialisée.
*/
[@ELEMENT_NAME@]* build_[@ELEMENT_NAME@]( [@ELEMENT_NAME@]* buffer );

/**
 * Destructeur.
 *
 * @param current - [@ELEMENT_NAME@]* : Structure à détruire.
*/
void delete_[@ELEMENT_NAME@]( [@ELEMENT_NAME@]* current );

/**
 * Constructeur. Initialise les attributs de la structure.
 *
 * @return Structure initialisée.
*/
base_ObjectDescription* init_[@ELEMENT_NAME@]( void );
#else
base_ObjectDescription* init_[@ELEMENT_NAME@]_export( void );
#endif

/*---< End of file >----------------------------------------------------------*/

